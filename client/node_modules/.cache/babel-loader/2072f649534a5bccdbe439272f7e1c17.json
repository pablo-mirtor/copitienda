{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshop => {\n      const collectionsMap = convertCollectionsSnapshopToMap(snapshop);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/pmiranda/Documents/Udemy/copitienda/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshopToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshop","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAQ;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAR,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAsB;AACzDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAAtB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAoB;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAApB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAO;AAC7C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAEd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAArB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshopToMap} from '../../firebase/firebase.utils'\nexport const fetchCollectionsStart = ( ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = ( ) => {\n    return dispatch => {\n        const collectionRef= firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshop => {\n            const collectionsMap = convertCollectionsSnapshopToMap(snapshop);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n};"]},"metadata":{},"sourceType":"module"}