{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pmiranda/Documents/Udemy/copitienda/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/pmiranda/Documents/Udemy/copitienda/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/pmiranda/Documents/Udemy/copitienda/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyBtOT9wSWQhE1RfEmNfomvximsfpQyXVRo\",authDomain:\"copitienda-db.firebaseapp.com\",databaseURL:\"https://copitienda-db.firebaseio.com\",projectId:\"copitienda-db\",storageBucket:\"copitienda-db.appspot.com\",messagingSenderId:\"955182870947\",appId:\"1:955182870947:web:5d769b1af62cd13ae92a16\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionsAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionsAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshopToMap=function convertCollectionsSnapshopToMap(collectionsSnapshot){var transformedCollection=collectionsSnapshot.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(acc,collection){acc[collection.title.toLowerCase()]=collection;return acc;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/Users/pmiranda/Documents/Udemy/copitienda/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshopToMap","collectionsSnapshot","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBtOT9wSWQhE1RfEmNfomvximsfpQyXVRo\",\n    authDomain: \"copitienda-db.firebaseapp.com\",\n    databaseURL: \"https://copitienda-db.firebaseio.com\",\n    projectId: \"copitienda-db\",\n    storageBucket: \"copitienda-db.appspot.com\",\n    messagingSenderId: \"955182870947\",\n    appId: \"1:955182870947:web:5d769b1af62cd13ae92a16\"\n  }\n  \n  firebase.initializeApp(config);\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\n\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n}\n  \nexport const convertCollectionsSnapshopToMap = (collectionsSnapshot) => {\n    const transformedCollection = collectionsSnapshot.docs.map(doc => {\n      const {title, items} = doc.data();\n      return {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title,\n        items\n      };\n    });\n\n    return transformedCollection.reduce((acc, collection) => {\n        acc[collection.title.toLowerCase()] = collection;\n        return acc;\n    }, {});\n}\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject)\n  })\n}\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n  googleProvider.setCustomParameters({ prompt: 'select_account'});\n\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}