{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedPrice, cartItem) => accumalatedPrice + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/pmiranda/Documents/Udemy/copitienda/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","accumalatedPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA8B,UAA9B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAC1BE,IAAD,IAAUA,IAAI,CAACE,SADY,CAAtC;AAGP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAC3BE,IAAD,IAAUA,IAAI,CAACI,MADa,CAAvC;AAGP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACLA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFrC,EAGI,CAHJ,CAH0C,CAA3C;AAUP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EACzCC,SAAS,IACLA,SAAS,CAACI,MAAV,CACI,CAACK,gBAAD,EAAmBH,QAAnB,KACIG,gBAAgB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAFxD,EAGI,CAHJ,CAFqC,CAAtC","sourcesContent":["import { createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart], (cart) => cart.cartItems);\n\nexport const selectCartHidden = createSelector(\n    [selectCart], (cart) => cart.hidden);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems =>\n        cartItems.reduce(\n            (accumalatedQuantity, cartItem) =>\n              accumalatedQuantity + cartItem.quantity,\n            0\n        )\n);\n\nexport const selectCartTotal = createSelector([selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumalatedPrice, cartItem) =>\n                accumalatedPrice + cartItem.quantity * cartItem.price,\n            0)\n);"]},"metadata":{},"sourceType":"module"}