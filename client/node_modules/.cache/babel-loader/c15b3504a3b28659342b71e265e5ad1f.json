{"ast":null,"code":"import{createSelector}from'reselect';var selectCart=function selectCart(state){return state.cart;};export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumalatedQuantity,cartItem){return accumalatedQuantity+cartItem.quantity;},0);});export var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumalatedPrice,cartItem){return accumalatedPrice+cartItem.quantity*cartItem.price;},0);});","map":{"version":3,"sources":["/Users/pmiranda/Documents/Udemy/copitienda/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","accumalatedPrice","price"],"mappings":"AAAA,OAASA,cAAT,KAA8B,UAA9B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,CAC3B,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,SAAf,EAD2B,CAAtC,CAGP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAC5B,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACI,MAAf,EAD4B,CAAvC,CAGP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,CAE9C,SAAAC,SAAS,QACLA,CAAAA,SAAS,CAACI,MAAV,CACI,SAACC,mBAAD,CAAsBC,QAAtB,QACED,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QADjC,EADJ,CAGI,CAHJ,CADK,EAFqC,CAA3C,CAUP,MAAO,IAAMC,CAAAA,eAAe,CAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,CACzC,SAAAC,SAAS,QACLA,CAAAA,SAAS,CAACI,MAAV,CACI,SAACK,gBAAD,CAAmBH,QAAnB,QACIG,CAAAA,gBAAgB,CAAGH,QAAQ,CAACC,QAAT,CAAoBD,QAAQ,CAACI,KADpD,EADJ,CAGI,CAHJ,CADK,EADgC,CAAtC","sourcesContent":["import { createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart], (cart) => cart.cartItems);\n\nexport const selectCartHidden = createSelector(\n    [selectCart], (cart) => cart.hidden);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems =>\n        cartItems.reduce(\n            (accumalatedQuantity, cartItem) =>\n              accumalatedQuantity + cartItem.quantity,\n            0\n        )\n);\n\nexport const selectCartTotal = createSelector([selectCartItems],\n    cartItems => \n        cartItems.reduce(\n            (accumalatedPrice, cartItem) =>\n                accumalatedPrice + cartItem.quantity * cartItem.price,\n            0)\n);"]},"metadata":{},"sourceType":"module"}