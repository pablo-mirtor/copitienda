{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo\\\\Documents\\\\Udemy React\\\\copitienda\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredencials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Las contrase単as no coinciden\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"No tengo una cuenta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Introduce tus datos\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    label: \"Nombre\",\n    value: displayName,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    label: \"Contrase\\xF1a\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    label: \"Confirmar contrase\\xF1a\",\n    type: \"password\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Registrar\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Pablo/Documents/Udemy React/copitienda/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredencials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","value","name","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './sign-up.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nconst SignUp = ({signUpStart}) => {\r\n    \r\n\r\n    const [userCredentials, setUserCredencials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n       \r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"Las contrase単as no coinciden\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password});\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n        return((<div className=\"sign-up\">\r\n        <h2>No tengo una cuenta</h2>\r\n        <span>Introduce tus datos</span>\r\n        <form onSubmit={this.handleSubmit}>\r\n            <FormInput name=\"displayName\" type=\"text\" label='Nombre' value={displayName} handleChange={handleChange} required/>\r\n            <FormInput name=\"email\" type=\"email\" label='Email' value={email} handleChange={this.handleChange} required/>\r\n            <FormInput name=\"password\" label='Contrase単a' type=\"password\" value={password} handleChange={handleChange} required/>\r\n            <FormInput name=\"confirmPassword\" label='Confirmar contrase単a' type=\"password\" value={confirmPassword} handleChange={handleChange} required/>\r\n            <CustomButton type=\"submit\">Registrar</CustomButton>\r\n        </form>\r\n    </div>) )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}