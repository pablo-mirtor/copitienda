{"ast":null,"code":"import ShopActionTypes from'./shop.types';import{firestore,convertCollectionsSnapshopToMap}from'../../firebase/firebase.utils';export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};export var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());collectionRef.get().then(function(snapshop){var collectionsMap=convertCollectionsSnapshopToMap(snapshop);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(error){return dispatch(fetchCollectionsFailure(error.message));});};};","map":{"version":3,"sources":["/Users/pmiranda/Documents/Udemy/copitienda/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshopToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshop","catch","error","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAAQC,SAAR,CAAmBC,+BAAnB,KAAyD,+BAAzD,CACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAQ,CACzCC,IAAI,CAAEJ,eAAe,CAACK,uBADmB,CAAR,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,cAAD,QAAsB,CACzDH,IAAI,CAAEJ,eAAe,CAACQ,yBADmC,CAEzDC,OAAO,CAAEF,cAFgD,CAAtB,EAAhC,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,YAAD,QAAoB,CACvDP,IAAI,CAAEJ,eAAe,CAACY,yBADiC,CAEvDH,OAAO,CAAEE,YAF8C,CAApB,EAAhC,CAKP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAO,CAC7C,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,aAAa,CAAEd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAArB,CAEAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAEAY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACjC,GAAMZ,CAAAA,cAAc,CAAGL,+BAA+B,CAACiB,QAAD,CAAtD,CACAL,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CACH,CAHD,EAGGa,KAHH,CAGS,SAAAC,KAAK,QAAIP,CAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ,EAHd,EAIH,CATD,CAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshopToMap} from '../../firebase/firebase.utils'\nexport const fetchCollectionsStart = ( ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage ) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = ( ) => {\n    return dispatch => {\n        const collectionRef= firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshop => {\n            const collectionsMap = convertCollectionsSnapshopToMap(snapshop);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n};"]},"metadata":{},"sourceType":"module"}